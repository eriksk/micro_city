varying vec4 color;

uniform sampler2D texture1; 
uniform sampler2D depthTex;

float linearizeDepth(vec2 uv)
{
  float n = 1.0; // camera z near
  float f = 5000.0; // camera z far
  float z = texture2D(depthTex, uv).x;
  return (2.0 * n) / (f + n - z * (f - n));	
}

void main(){
    
    float blurclamp = 0.5;  // max blur amount
    float bias = 0.01; //aperture - bigger values for shallower depth of field
    float focus = 0.01;  // this value comes from ReadDepth script.
 
    float aspectratio = 1280.0/720.0;
    vec2 aspectcorrect = vec2(1.0,aspectratio);

    float factor = (linearizeDepth(gl_TexCoord[0].xy)  - focus);

    vec2 dofblur = vec2 (clamp( factor * bias, -blurclamp, blurclamp ));

    vec4 col = vec4(0);

    col += texture2D(texture1, gl_TexCoord[0].xy);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.0,0.4 )*aspectcorrect) * dofblur);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.15,0.37 )*aspectcorrect) * dofblur);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.29,0.29 )*aspectcorrect) * dofblur);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.37,0.15 )*aspectcorrect) * dofblur);       
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.4,0.0 )*aspectcorrect) * dofblur);   
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.37,-0.15 )*aspectcorrect) * dofblur);       
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.29,-0.29 )*aspectcorrect) * dofblur);       
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.15,-0.37 )*aspectcorrect) * dofblur);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.0,-0.4 )*aspectcorrect) * dofblur); 
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.15,0.37 )*aspectcorrect) * dofblur);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.29,0.29 )*aspectcorrect) * dofblur);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.37,0.15 )*aspectcorrect) * dofblur); 
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.4,0.0 )*aspectcorrect) * dofblur); 
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.37,-0.15 )*aspectcorrect) * dofblur);       
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.29,-0.29 )*aspectcorrect) * dofblur);       
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.15,-0.37 )*aspectcorrect) * dofblur);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.15,0.37 )*aspectcorrect) * dofblur*0.9);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.37,0.15 )*aspectcorrect) * dofblur*0.9);           
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.37,-0.15 )*aspectcorrect) * dofblur*0.9);           
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.15,-0.37 )*aspectcorrect) * dofblur*0.9);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.15,0.37 )*aspectcorrect) * dofblur*0.9);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.37,0.15 )*aspectcorrect) * dofblur*0.9);            
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.37,-0.15 )*aspectcorrect) * dofblur*0.9);   
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.15,-0.37 )*aspectcorrect) * dofblur*0.9);   
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.29,0.29 )*aspectcorrect) * dofblur*0.7);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.4,0.0 )*aspectcorrect) * dofblur*0.7);       
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.29,-0.29 )*aspectcorrect) * dofblur*0.7);   
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.0,-0.4 )*aspectcorrect) * dofblur*0.7);     
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.29,0.29 )*aspectcorrect) * dofblur*0.7);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.4,0.0 )*aspectcorrect) * dofblur*0.7);     
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.29,-0.29 )*aspectcorrect) * dofblur*0.7);   
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.0,0.4 )*aspectcorrect) * dofblur*0.7);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.29,0.29 )*aspectcorrect) * dofblur*0.4);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.4,0.0 )*aspectcorrect) * dofblur*0.4);       
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.29,-0.29 )*aspectcorrect) * dofblur*0.4);   
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.0,-0.4 )*aspectcorrect) * dofblur*0.4);     
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.29,0.29 )*aspectcorrect) * dofblur*0.4);
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.4,0.0 )*aspectcorrect) * dofblur*0.4);     
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( -0.29,-0.29 )*aspectcorrect) * dofblur*0.4);   
    col += texture2D(texture1, gl_TexCoord[0].xy + (vec2( 0.0,0.4 )*aspectcorrect) * dofblur*0.4);       

  gl_FragColor = col/41.0;
  gl_FragColor.a = 1.0;

//    gl_FragColor = texture2D(texture1, gl_TexCoord[0].xy) * (1.0f - linearizeDepth(gl_TexCoord[0].xy));
}